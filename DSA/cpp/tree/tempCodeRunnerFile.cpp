 // vector<int> v = {1, 2, 4, -1, -1, 5, -1, -1, 3, -1, 6, -1, -1};
    // node* root = build_tree(v);
    // node* subroot = new node(2);
    // subroot->left = new node(4);
    // subroot->right = new node(5);
    // preorder(root);
    // cout<<endl;
    // inorder(root);
    // cout<<endl;
    // postorder(root);
    // cout<<endl;
    // level_order(root);
    // cout<<"height of the tree is : "<<height(root)<<endl;
    // cout<<"number of the nodes in the tree  is : "<<count(root)<<endl;
    // cout<<"sum of the nodes in the tree  is : "<<sum(root)<<endl;
    // cout<<"the number of the trees are : "<<numTrees(11)<<endl;
    // print(zigzag_level_order(root));
    // // cout<<"is subtree "<< issubtree(root, subroot) ? 1: 0 <<"\n";
    // kth_level(root, 2);
    // kth_levelLrecursive(root, 2, 0);
    // lca(root);